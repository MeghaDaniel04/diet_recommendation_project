@jwt_required() : users with valid token only can access various pages

 {/* Public Routes */}
      <Route path="/login" element={<Login/>}/>
      <Route path="/signup" element={<Signup/>}/>

      {/* Protected Routes */}
      <Route path="/submit-data" element={<ProfilePage/>}/>
      <Route path="/food-intake" element={<FoodIntakePage/>}/>
      <Route path="/dashboard" element={<Dashboard />} />


      
// import React, { useState } from "react";
// import axios from "axios";

// const FoodIntake = () => {
//   const [foodQuery, setFoodQuery] = useState('');
//   const [foodSuggestions, setFoodSuggestions] = useState([]);
//   const [selectedFood, setSelectedFood] = useState(null);
//   const [grams, setGrams] = useState('');

//   const fetchFoodSuggestions = async (query) => {
//     if (query) {
//       try {
//         const response = await axios.get(`/api/fetch-food-data`, { params: { query } });
//         setFoodSuggestions(response.data);
//       } catch (error) {
//         console.error("Error fetching food suggestions:", error);
//       }
//     } else {
//       setFoodSuggestions([]);
//     }
//   };

//   const handleAddFoodItem = async () => {
//     if (!selectedFood || !grams) return alert("Invalid input");
//     const mealType = prompt("Enter Meal Type:");
//     const token = localStorage.getItem("access_token");

//     try {
//       await axios.post("/api/add-food-log", { mealTime: mealType, foods: [{ ...selectedFood, quantity: grams }] }, { headers: { Authorization: `Bearer ${token}` } });
//       alert("Food log added successfully!");
//     } catch (error) {
//       console.error("Error logging food:", error);
//     }
//   };

//   return (
//     <div>
//       <h1>Food Intake</h1>
//       <input type="text" value={foodQuery} onChange={(e) => fetchFoodSuggestions(e.target.value)} placeholder="Search food" />
//       {foodSuggestions.map((food) => (
//         <p key={food.fdcId} onClick={() => setSelectedFood(food)}>{food.name}</p>
//       ))}
//       <input type="number" value={grams} onChange={(e) => setGrams(e.target.value)} placeholder="Enter grams" />
//       <button onClick={handleAddFoodItem}>Add Food</button>
//     </div>
//   );
// };

// export default FoodIntake;

